<?php

namespace app\controllers;

use app\core\Application;
use app\core\Controller;
use app\core\Request;
use app\models\Chat;

class ChatController extends Controller
{
    public function sendMessage()
    {
        // Set the Content-Type to JSON
        header('Content-type: application/json');

        try {
            // Get JSON input from the request body
            $jsonData = file_get_contents('php://input');
            $data = json_decode($jsonData, true);

            // Extract required parameters
            $incomingId = $data['incoming_id'] ?? null;
            $message = $data['message'] ?? null;

            // Validate required parameters
            if (!$incomingId || !$message) {
                Application::$app->response->setStatusCode(400);
                echo json_encode(['success' => false, 'error' => 'Missing required parameters: incoming_id or message']);
                return;
            }

            // Get technician ID from session
            $outgoingId = Application::$app->session->get('technician');
            if (!$outgoingId) {
                Application::$app->response->setStatusCode(401);
                echo json_encode(['success' => false, 'error' => 'Technician is not logged in']);
                return;
            }

            // Use the saveMessage function from the Chat model
            $chatModel = new Chat();
            $result = $chatModel->customerSaveMessage($outgoingId, $incomingId, $message);

            if ($result) {
                echo json_encode(['success' => true, 'message' => 'Message sent successfully']);
            } else {
                Application::$app->response->setStatusCode(500);
                echo json_encode(['success' => false, 'error' => 'Failed to send the message']);
            }

        } catch (\Exception $e) {
            // Handle exceptions gracefully
            Application::$app->response->setStatusCode(500);
//            echo json_encode(['success' => false, 'error' => $e->getMessage()]);
        }
    }
}
